//
//  TypeSwift
//  Created by Justin Bush (@buzsh)
//  https://typeswift.org
//  https://github.com/TypeSwift/TypeSwift
//
//  Generated by SwiftGen
//  DO NOT MODIFY THE CONTENTS OF THIS FILE
//

import WebKit

extension WKWebView {
  ///
  /// Executes the JavaScript code corresponding to a `TypeSwift` enumeration case.
  ///
  /// This method evaluates the JavaScript code generated by the `jsString` property of the `TypeSwift` enumeration.
  ///
  /// - Parameter identifier: The `TypeSwift` enumeration case to be evaluated.
  ///
  /// # Usage:
  /// ```swift
  /// let variable = TypeSwift.variable
  /// webView.ts(variable)
  /// // or
  /// webView.ts(.variable)
  ///
  /// let functionCall = TypeSwift.function(param)
  /// webView.ts(functionCall)
  /// // or
  /// webView.ts(.function(param))
  /// ```
  func ts(_ identifier: TypeSwift) {
    self.evaluateJavaScript(identifier.jsString, completionHandler: nil)
  }
  func ts(_ identifier: TypeSwift, completionHandler: ((Any?, Error?) -> Void)? = nil) {
    self.evaluateJavaScript(identifier.jsString, completionHandler: completionHandler)
  }
}

extension ObservableWebViewManager {
  ///
  /// Executes the JavaScript code corresponding to a `TypeSwift` enumeration case.
  ///
  /// This method evaluates the JavaScript code generated by the `jsString` property of the `TypeSwift` enumeration.
  ///
  /// - Parameter identifier: The `TypeSwift` enumeration case to be evaluated.
  ///
  /// # Usage:
  /// ```swift
  /// let variable = TypeSwift.variable
  /// webView.ts(variable)
  /// // or
  /// webView.ts(.variable)
  ///
  /// let functionCall = TypeSwift.function(param)
  /// webView.ts(functionCall)
  /// // or
  /// webView.ts(.function(param))
  /// ```
  func ts(_ identifier: TypeSwift) {
    self.webView.evaluateJavaScript(identifier.jsString, completionHandler: nil)
  }
  func ts(_ identifier: TypeSwift, completionHandler: ((Any?, Error?) -> Void)? = nil) {
    self.webView.evaluateJavaScript(identifier.jsString, completionHandler: completionHandler)
  }
}
